{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red17\green85\blue205;}
{\*\expandedcolortbl;;\csgenericrgb\c6667\c33333\c80392;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 README for PA3: Chess\
Lauren Kidman\
24F COSC76: Artificial Intelligence\
25 October 2024\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 FOR gui_chess.py:
\f0\b0 \
\
\pard\pardeftab720\partightenfactor0
\cf0 First check that the
\f2\i  
\f0\i0 \cf2 Python chess package \cf0 is installed. From there,\
ensure all files are within the same folder, and run gui_chess.py to get a visual graphic showing the moves of the game. One can modify which type of AI they would like to see play (Random, Minimax, AlphaBeta) by modifying the player1 and player2 initializations in the _main_ of gui_chess,py\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 FOR test_chess.py:
\f0\b0 \
\pard\pardeftab720\partightenfactor0
\cf0 Like with gui_chess.py, One can modify which type of AI they would like to see play (Random, Minimax, AlphaBeta) by modifying the player1 and player2 initializations in the test_chess.py class. This code will skip the graphic/GUI representation, instead showing a text/symbol-based print out of the chess board in the terminal.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
}